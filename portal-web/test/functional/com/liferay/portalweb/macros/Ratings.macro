definition {

	macro rate {
		if (isSet(commentRating)) {
			Click.clickNoMouseOver(
				key_ratingResult = "${ratingResult}",
				locator1 = "Ratings#COMMENT_RATING_THUMB");
		}
		else {
			Click(
				key_ratingResult = "${ratingResult}",
				locator1 = "Ratings#THUMB");
		}
	}

	macro rateStarPG {
		Click(locator1 = "Ratings#YOUR_RATING_STAR");

		Click.clickNoMouseOver(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STAR_COUNT");

		AssertElementPresent(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STAR_RESULT");
	}

	macro viewRating {
		if (isSet(ratingResult)) {
			if (isSet(commentRating)) {
				AssertTextEquals(
					key_ratingResult = "${ratingResult}",
					locator1 = "Ratings#COMMENT_RATING_THUMB",
					value1 = "${voteCount}");
			}
			else {
				AssertTextEquals(
					key_ratingResult = "${ratingResult}",
					locator1 = "Ratings#THUMB",
					value1 = "${voteCount}");
			}
		}
	}

	macro viewRateStarPG {
		AssertElementPresent(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STAR_RESULT");

		AssertTextEquals(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STAR_RESULT_COUNT",
			value1 = "${ratingStarCount}");

		AssertTextEquals.assertPartialText(
			locator1 = "Ratings#AVERAGE_STAR_RESULT",
			value1 = "${averageRatingStarCount}");
	}

	macro viewRatingReadOnly {
		AssertElementNotPresent(
			key_ratingResult = "Rate this as good",
			locator1 = "Ratings#THUMB");

		AssertElementNotPresent(
			key_ratingResult = "Rate this as bad",
			locator1 = "Ratings#THUMB");

		AssertElementPresent(locator1 = "Ratings#THUMB_UP_OFF");
		AssertElementPresent(locator1 = "Ratings#THUMB_DOWN_OFF");
	}

	macro viewRatingWithStarsReadOnly {
		AssertElementNotPresent(locator1 = "Ratings#YOUR_RATING_STAR");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_DISABLE");
		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR");
	}

}