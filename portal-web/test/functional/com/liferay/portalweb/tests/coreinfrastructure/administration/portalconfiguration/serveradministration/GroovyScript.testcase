@component-name = "portal-server-administration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Server Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "This is a test for LRQA-53784"
	@priority = "5"
	test ExecuteScriptWithLiferayClasses {
		ServerAdministration.openServerAdmin();

		var script = '''
			import com.liferay.fragment.service.FragmentCollectionLocalServiceUtil;
			import com.liferay.counter.kernel.service.CounterLocalServiceUtil;

			fragmentCollectionId = CounterLocalServiceUtil.increment();

			fragmentCollection = FragmentCollectionLocalServiceUtil.createFragmentCollection(fragmentCollectionId);

			fragmentCollection.setName("Test Fragment Collection Name");

			out.println(fragmentCollection.getName());
		''';

		ServerAdministration.executeScript(
			language = "Groovy",
			script = "${script}");

		AssertTextEquals(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "Test Fragment Collection Name");
	}

	@description = "This is a test for LRQA-53785"
	@priority = "4"
	test ExecuteScriptWithPredefinedVariables {
		ServerAdministration.openServerAdmin();

		var script = '''
			import com.liferay.portal.kernel.util.PortalUtil;

			company = PortalUtil.getCompany(actionRequest);

			out.println("Current company: ${company.getName()}");
		''';

		ServerAdministration.executeScript(
			language = "Groovy",
			script = "${script}");

		AssertTextEquals(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "Current company: Liferay DXP");
	}

	@description = "This is a test for LRQA-53783"
	@priority = "5"
	test ExecuteSimpleScript {
		ServerAdministration.openServerAdmin();

		var script = '''
			out.println("Test groovy script");
		''';

		ServerAdministration.executeScript(
			language = "Groovy",
			script = "${script}");

		AssertTextEquals(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "Test groovy script");
	}

}