{namespace com.liferay.layout.content.page.editor.web.segmentsExperiences.ExperienceItem}

{template .render}
	{@param active: bool }
	{@param experience: [
		segmentsExperienceId: string,
		hasLockedSegmentsExperiment: bool,
		name: string,
		priority: int,
		segmentsEntryName: string,
		segmentsEntryId: string,
		segmentsExperimentStatus: [
			label: string,
			value: number
		],
		segmentsExperimentURL: string
	]}
	{@param? hasUpdatePermissions: bool }
	{@param isDefaultExperience: bool }
	{@param? _handleExperienceSelect: any }
	{@param? _handleExperienceEdit: any }
	{@param? _handleExperienceDelete: any }
	{@param? _handlePriorityIncrease: any }
	{@param? _handlePriorityDecrease: any }
	{@param? _handleExperimentNavigation: any }
	{@param spritemap: string }
	{@param disabledMoveUp: bool }
	{@param disabledMoveDown: bool }

	{let $experienceClasses kind="text"}
		d-flex
		{sp}dropdown-menu__experience

		{if $active }
			{sp}dropdown-menu__experience--active
		{/if}
	{/let}

	<li class="{$experienceClasses}" key="{$experience.segmentsExperienceId}">
		<span class="overflow-hidden p-2 w-100">
			<button
				class="align-items-baseline btn btn-unstyled d-flex justify-content-between p-2 text-dark title w-100"
				data-onclick="{$_handleExperienceSelect}"
				data-segments-experience-id="{$experience.segmentsExperienceId}"
				ref="selectExperienceButton{$experience.segmentsExperienceId}"
				tabindex="0"
				type="button"
			>
				<span class="d-flex flex-column flex-grow-1 text-truncate">
					<strong class="text-truncate">
						{$experience.name}
						{sp}

						{if $experience.hasLockedSegmentsExperiment}
							{call ClayIcon.render}
								{param elementClasses: 'small text-secondary' /}
								{param spritemap: $spritemap /}
								{param symbol: 'lock' /}
							{/call}
						{/if}
					</strong>

					<span class="audience d-block text-truncate">
						<span class="text-secondary">
							{msg desc=""}audience{/msg}{sp}
						</span>

						{$experience.segmentsEntryName}
					</span>
					{if $experience.segmentsExperimentStatus}
						<div>
							<span class="font-weight-normal text-secondary">
								{msg desc=""}test{/msg}{sp}
							</span>

							{call com.liferay.layout.content.page.editor.web.ExperimentsLabel.render}
								{param label: $experience.segmentsExperimentStatus.label /}
								{param value: $experience.segmentsExperimentStatus.value /}
							{/call}
						</div>
					{/if}
				</span>

			</button>
		</span>

		{if $hasUpdatePermissions and not $isDefaultExperience and not $experience.hasLockedSegmentsExperiment}
			<div class="align-items-center d-flex dropdown-menu__experience--btn-group px-2">
				{let $priorityUpButtonRef: 'buttonPriorityUp' + $experience.segmentsExperienceId /}
				{let $priorityDownButtonRef: 'buttonPriorityDown' + $experience.segmentsExperienceId /}

				{let $prioritizeLabel kind="text"}
					{msg desc=""}prioritize-experience{/msg}
				{/let}

				{call ClayButton.render}
					{param disabled: $disabledMoveUp /}
					{param data: [
						'priority': $experience.priority,
						'segmentsExperienceId': $experience.segmentsExperienceId
					]/}
					{param elementClasses: 'btn-borderless mx-2 text-secondary' /}
					{param events: [
						'click': $_handlePriorityIncrease,
					] /}
					{param icon: 'angle-up' /}
					{param monospaced: true /}
					{param ref: $priorityUpButtonRef /}
					{param size: 'sm' /}
					{param spritemap: $spritemap /}
					{param style: 'unstyled' /}
					{param title: $prioritizeLabel /}
				{/call}

				{let $deprioritizeLabel kind="text"}
					{msg desc=""}deprioritize-experience{/msg}
				{/let}

				{call ClayButton.render}
					{param disabled: $disabledMoveDown /}
					{param data: [
						'priority': $experience.priority,
						'segmentsExperienceId': $experience.segmentsExperienceId
					]/}
					{param elementClasses: 'btn-borderless mx-2 text-secondary' /}
					{param events: [
						'click': $_handlePriorityDecrease
					] /}
					{param icon: 'angle-down' /}
					{param monospaced: true /}
					{param ref: $priorityDownButtonRef /}
					{param size: 'sm' /}
					{param spritemap: $spritemap /}
					{param style: 'unstyled' /}
					{param title: $deprioritizeLabel /}
				{/call}

				{let $editLabel kind="text"}
					{msg desc=""}edit-experience{/msg}
				{/let}

				{call ClayButton.render}
					{param data: [
						'segmentsExperienceId': $experience.segmentsExperienceId,
						'name': $experience.name,
						'segmentsEntryId': $experience.segmentsEntryId
					]/}
					{param elementClasses: 'btn-borderless mx-2 text-secondary' /}
					{param events: [
						'click': $_handleExperienceEdit,
					] /}
					{param icon: 'pencil' /}
					{param monospaced: true /}
					{param size: 'sm' /}
					{param spritemap: $spritemap /}
					{param style: 'unstyled' /}
					{param title: $editLabel /}
				{/call}

				{let $deleteLabel kind="text"}
					{msg desc=""}delete-experience{/msg}
				{/let}

				{call ClayButton.render}
					{param data: [
						'segmentsExperienceId': $experience.segmentsExperienceId
					]/}
					{param elementClasses: 'btn-borderless mx-2 text-secondary' /}
					{param events: [
						'click': $_handleExperienceDelete,
					] /}
					{param icon: 'times-circle' /}
					{param monospaced: true /}
					{param size: 'sm' /}
					{param spritemap: $spritemap /}
					{param style: 'unstyled' /}
					{param title: $deleteLabel /}
				{/call}
			</div>
		{/if}

		{if $experience.hasLockedSegmentsExperiment and $experience.segmentsExperimentURL}
			{let $goToTestLabel kind="text"}
				{msg desc=""}go-to-test-details{/msg}
			{/let}

			<div class="align-items-center d-flex dropdown-menu__experience--btn-group px-2">
				<a class="btn btn-borderless btn-monospaced btn-sm btn-unstyled mx-2 mr-0 text-secondary"  href="{$experience.segmentsExperimentURL}" data-onclick="{$_handleExperimentNavigation}" title="{$goToTestLabel}">
					{call ClayIcon.render}
						{param spritemap: $spritemap /}
						{param symbol: 'test' /}
					{/call}
				</a>
			</div>
		{/if}
	</li>
{/template}