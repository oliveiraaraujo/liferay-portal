@component-name = "app-builder"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "App Builder";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "App Builder",
			panel = "Control Panel",
			portlet = "Custom Objects");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "App Builder",
				panel = "Control Panel",
				portlet = "Custom Objects");

			AppBuilderAdmin.teardownAppBuilder();

		}
	}

	@description = "Add a Custom Object with valid name"
	@priority = "5"
	test AddCustomObjectWithValidName {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "my custom object");

		AppBuilderAdmin.gotoBack();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "my custom object");
	}

	@description = "Add a Form View with a Date field"
	@priority = "5"
	test AddSimpleFormViewWithDateField {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Date";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Form View");

		AppBuilderAdmin.openItem(customObjectName = "My Form View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");
	}

	@description = "Add a Form View with a Grid field"
	@priority = "5"
	test AddSimpleFormViewWithGridField {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Grid";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Form View");

		AppBuilderAdmin.openItem(customObjectName = "My Form View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");
	}

	@description = "Add a Form View with a Multiple Selection field"
	@priority = "5"
	test AddSimpleFormViewWithMultipleSelectionField {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Multiple Selection";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Form View");

		AppBuilderAdmin.openItem(customObjectName = "My Form View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");
	}

	@description = "Add a Form View with a Numeric field"
	@priority = "5"
	test AddSimpleFormViewWithNumericField {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Numeric";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Form View");

		AppBuilderAdmin.openItem(customObjectName = "My Form View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");
	}

	@description = "Add a Form View with a Select From List field"
	@priority = "5"
	test AddSimpleFormViewWithSelectFromListField {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Select from List";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Form View");

		AppBuilderAdmin.openItem(customObjectName = "My Form View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");
	}

	@description = "Add a Form View with a Single Selection field"
	@priority = "5"
	test AddSimpleFormViewWithSingleSelectionField {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Single Selection";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Form View");

		AppBuilderAdmin.openItem(customObjectName = "My Form View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");
	}

	@description = "Add a Form View with a Text Field"
	@priority = "5"
	test AddSimpleFormViewWithTextField {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Text Field";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Form View");

		AppBuilderAdmin.openItem(customObjectName = "My Form View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");
	}

	@description = "Add a Form View with a Upload field"
	@priority = "5"
	test AddSimpleFormViewWithUploadField {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Upload";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Form View");

		AppBuilderAdmin.openItem(customObjectName = "My Form View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");
	}

	@description = "Add a Table View"
	@priority = "5"
	test AddSimpleTableView {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		var fieldType = "Text Field";

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(title = "My Form View");

		FormViewBuilder.save();

		AppBuilderAdmin.switchTab(tabName = "Table Views");

		AppBuilderAdmin.add();

		TableViewBuilder.addColumnByDoubleClick(fieldType = "Text Field");
		
		TableViewBuilder.setName(title = "My Table View");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(customObjectName = "My Table View");

		AppBuilderAdmin.openItem(customObjectName = "My Table View");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");

	}

	@description = "Attempt to add a Custom Object without a valid name"
	@priority = "5"
	test AttemptToAddCustomObjectWithoutValidName {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");
		AppBuilderAdmin.validateRequiredValidNameMessage();
		AppBuilderAdmin.cancelNewCustomObject();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");
		AppBuilderAdmin.validateRequiredValidNameMessage();
		AppBuilderAdmin.cancelNewCustomObject();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "false");
		AppBuilderAdmin.validateRequiredValidNameMessage();
		AppBuilderAdmin.cancelNewCustomObject();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "false");
		AppBuilderAdmin.validateRequiredValidNameMessage();
		AppBuilderAdmin.cancelNewCustomObject();
	}

	@description = "Validate empty list state of Apps listing screen"
	@priority = "5"
	test ValidateEmptyStateOfAppsListingScreen {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.switchTab(tabName = "Apps");

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Select the form and table view you want and deploy your app as a widget, standalone or place it in the product menu.",
			title = "There are no apps yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New App");
	}

	@description = "Validate empty list state of Custom Object listing screen"
	@priority = "5"
	test ValidateEmptyStateOfCustomObjectListingScreen {
		property portal.acceptance = "false";

		AppBuilderAdmin.teardownAppBuilder();

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Custom Objects define the types of data your business application needs.",
			title = "There are no custom objects yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New Custom Object");
	}

	@description = "Validate empty list state of Form View listing screen"
	@priority = "5"
	test ValidateEmptyStateOfFormViewListingScreen {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Create one or more forms to display the data held in your data object.",
			title = "There are no form views yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New Form View");
	}

	@description = "Validate empty list state of Table View listing screen"
	@priority = "5"
	test ValidateEmptyStateOfTableViewListingScreen {
		property portal.acceptance = "false";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.switchTab(tabName = "Table Views");

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Create one or more tables to display the data held in your data object.",
			title = "There are no table views yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New Table View");
	}

}