{namespace Geolocation}

{template .render}
	{@param name: string}
	{@param? _handleFieldBlurred: any}
	{@param? _handleValueChanged: any}
	{@param? _handleFieldFocused: any}
	{@param? displayErrors: bool}
	{@param? errorMessage: string}
	{@param? geolocateTitle: string}
	{@param? googleMapsAPIKey: string}
	{@param? id: string}
	{@param? inline: bool}
	{@param? label: string}
	{@param? mapProviderKey: string}
	{@param? options: list<[
		label: string,
		value: string
	]>}
	{@param? pathThemeImages: string}
	{@param? predefinedValue: string}
	{@param? readOnly: bool}
	{@param? repeatable: bool}
	{@param? required: bool}
	{@param? showLabel: bool}
	{@param? spritemap: string}
	{@param? tip: string}
	{@param? valid: bool}
	{@param? value: ?}
	{@param? visible: bool}

	{call FieldBase.render}
		{param contentRenderer kind="html"}
			{call .content}
				{param _handleFieldBlurred: $_handleFieldBlurred /}
				{param _handleFieldFocused: $_handleFieldFocused /}
				{param _handleValueChanged: $_handleValueChanged /}
				{param disabled: $readOnly /}
				{param geolocateTitle: $geolocateTitle /}
				{param googleMapsAPIKey: $googleMapsAPIKey /}
				{param inline: $inline /}
				{param mapProviderKey: $mapProviderKey /}
				{param name: $name /}
				{param options: $options /}
				{param pathThemeImages: $pathThemeImages /}
				{param predefinedValue: $predefinedValue /}
				{param readOnly: $readOnly /}
				{param value: $value /}
			{/call}
		{/param}
		{param displayErrors: $displayErrors /}
		{param errorMessage: $errorMessage /}
		{param id: $id /}
		{param label: $label /}
		{param name: $name /}
		{param readOnly: $readOnly /}
		{param repeatable: $repeatable /}
		{param required: $required /}
		{param showLabel: $showLabel /}
		{param spritemap: $spritemap /}
		{param tip: $tip /}
		{param valid: $valid /}
		{param visible: $visible /}
	{/call}
{/template}

{template .content}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldFocused: any}
	{@param? _handleValueChanged: any}
	{@param? geolocateTitle: string}
	{@param? googleMapsAPIKey: string}
	{@param? mapProviderKey: string}
	{@param? pathThemeImages: string}
	{@param? predefinedValue: string}
	{@param? readOnly: bool}
	{@param? value: string}

	<div
		class="ddm-geolocation field-labels-inline"
		data-onblur="{$_handleFieldBlurred}"
		data-onfocus="{$_handleFieldFocused}"
		data-onchanges="{$_handleValueChanged}"
	>
		{let $geolocationValue: $value ?: $predefinedValue ?: '' /}

		<div data-marcelateste="{$googleMapsAPIKey}" data-marcelateste2="{$mapProviderKey}">{$geolocationValue}</div>
		{if $readOnly}
			<img
				alt="{$pathThemeImages}"
				title="{$geolocateTitle}"
				src="{$pathThemeImages}/common/geolocation.png"
			/>
		{else}
			<dl>
				<dt class="text-capitalize"></dt>
				<dd>
					<div class="lfr-map" id="targetGeo1" style="height: 280px; border:1px solid red;"></div>
				</dd>
			</dl>
		{/if}
	</div>
{/template}