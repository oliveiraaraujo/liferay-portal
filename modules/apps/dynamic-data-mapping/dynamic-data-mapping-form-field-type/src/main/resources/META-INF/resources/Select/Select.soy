{namespace Select}

{template .render}
	{@param name: string}
	{@param spritemap: string}
	{@param value: ?}
	{@param? _handleExpandedChanged: any}
	{@param? _handleItemClicked: any}
	{@param? _handleLabelClosed: any}
	{@param? dataSourceType: string}
	{@param? displayErrors: bool}
	{@param? emptyOptionLabel: string}
	{@param? errorMessage: string}
	{@param? expanded: bool}
	{@param? id: string}
	{@param? label: string}
	{@param? localizedValue: ?}
	{@param? multiple: bool}
	{@param? options: list<?>}
	{@param? predefinedValue: ?}
	{@param? readOnly: bool}
	{@param? repeatable: bool}
	{@param? required: bool}
	{@param? showLabel: bool}
	{@param? tip: string}
	{@param? valid: bool}
	{@param? visible: bool}

	{let $displayValues: length($value) > 0 ? $value : $predefinedValue and length($predefinedValue) > 0 ? $predefinedValue : [] /}

	{call FieldBase.render}
		{param contentRenderer kind="html"}
			{call .content}
				{param _handleExpandedChanged: $_handleExpandedChanged /}
				{param _handleItemClicked: $_handleItemClicked /}
				{param _handleLabelClosed: $_handleLabelClosed /}
				{param dataSourceType: $dataSourceType /}
				{param displayValues: $displayValues /}
				{param emptyOptionLabel: $emptyOptionLabel /}
				{param expanded: $expanded /}
				{param id: $id /}
				{param multiple: $multiple /}
				{param name: $name /}
				{param options: $options /}
				{param readOnly: $readOnly /}
				{param spritemap: $spritemap /}
				{param value: $value /}
			{/call}
		{/param}
		{param displayErrors: $displayErrors /}
		{param errorMessage: $errorMessage /}
		{param label: $label /}
		{param localizedValue: $localizedValue /}
		{param name: $name /}
		{param readOnly: $readOnly /}
		{param ref: 'base' /}
		{param repeatable: $repeatable /}
		{param required: $required /}
		{param showLabel: $showLabel /}
		{param spritemap: $spritemap /}
		{param tip: $tip /}
		{param valid: $valid /}
		{param visible: $visible /}
	{/call}
{/template}

{template .content}
	{@param displayValues: ?}
	{@param name: string}
	{@param spritemap: string}
	{@param value: list<string>}
	{@param? _handleExpandedChanged: any}
	{@param? _handleItemClicked: any}
	{@param? _handleLabelClosed: any}
	{@param? emptyOptionLabel: string}
	{@param? expanded: bool}
	{@param? id: string}
	{@param? multiple: bool}
	{@param? options: list<?>}
	{@param? readOnly: bool}

	{if $options}
		{let $trigger kind="html"}
			{if not $readOnly}
				{call .hidden_select}
					{param displayValues: $displayValues /}
					{param multiple: $multiple /}
					{param name: $name /}
					{param options: $options /}
				{/call}
			{/if}

			<div class="form-builder-select-field input-group-container">
				{let $classes kind="text"}
					form-control results-chosen select-field-trigger

					{if $multiple}
						{sp}multiple-label-list
					{/if}
				{/let}

				{let $attributes kind="attributes"}
					class="{$classes}"

					{if $id}
						id="{$id}"
					{/if}

					{if $readOnly}
						disabled
					{/if}
				{/let}

				<ul {$attributes}>
					{foreach $currentValue in $value}
						{foreach $option in $options}
							{if $currentValue == $option.value}
								{if $multiple}
									<li>
										{call ClayLabel.render}
											{param closeable: true /}
											{param elementClasses: 'ddm-select-option-label' /}
											{param data: [
												'value': $option.value
											] /}
											{param events: [
												'close': $_handleLabelClosed
											]/}
											{param label: $option.label /}
											{param spritemap: $spritemap /}
											{param truncate: true /}
										{/call}
									</li>
								{else}
									{call SingleSelectedOption.render}
										{param label: $option.label /}
									{/call}
								{/if}
							{/if}
						{/foreach}

						{ifempty}
							<div class="option-selected option-selected-placeholder">
								{if $emptyOptionLabel != null}
									{$emptyOptionLabel}
								{/if}
							</div>
					{/foreach}

					<a class="select-arrow-down-container">
						{if $spritemap}
							{call ClayIcon.render}
								{param spritemap: $spritemap /}
								{param symbol: 'caret-double' /}
							{/call}
						{/if}
					</a>
				</ul>
			</div>
		{/let}

		{call ClayDropdownBase.render}
			{param disabled: $readOnly /}
			{param events: [
				'expandedChanged': $_handleExpandedChanged,
				'itemClicked': $_handleItemClicked
			]/}
			{param elementClasses: 'ddm-btn-full ddm-select-dropdown' /}
			{param expanded: $expanded /}
			{param items: $options /}
			{param label: $trigger /}
			{param ref: 'dropdown' /}
			{param searchable: length($options) > 6 ? true : false /}
			{param spritemap: $spritemap /}
			{param useSearchableWithForm: false /}
		{/call}
	{/if}
{/template}

/**
 * Prints hidden select tag.
 */
{template .hidden_select}
	{@param displayValues: ?}
	{@param name: string}
	{@param options: list<?>}
	{@param? multiple: bool}

	<select aria-label="select" class="form-control hide" id="{$name}" name="{$name}" {if $multiple}multiple size="{length($options)}"{/if}>
		{foreach $currentValue in $displayValues}
			<option selected="selected" value="{$currentValue}">{$currentValue}</option>
		{/foreach}
	</select>
{/template}