@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Repositories",
			panel = "Control Panel",
			portlet = "Repositories");

		Depot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();

			DMDocument.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This ensures that a depot image can be used through Blogs on a connected site."
	@priority = "5"
	test AddImageViaBlogs {
		JSONGroup.addGroup(groupName = "Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "Document_2.jpg");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(
			connectSite = "true",
			siteList = "Site Name");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "site-name");

		BlogsNavigator.gotoAddEntry();

		BlogsNavigator.gotoSelectFile();

		ItemSelector.selectRepositoryImage(
			depotName = "Test Depot Name",
			imageFileName = "Document_2.jpg");

		BlogsEntry.addTitle(entryTitle = "Blogs Entry Title");

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");

		Button.clickPublish();

		Pause(locator1 = "10000");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_2");
	}

	@description = "This ensures that a depot image can be used through page creation on a connected site."
	@priority = "5"
	test AddImageViaContentPage {
		JSONGroup.addGroup(groupName = "Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpeg",
			dmDocumentTitle = "Document_1.jpeg");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(
			connectSite = "true",
			siteList = "Site Name");

		SitePages.openPagesAdmin(siteURLKey = "site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addLayoutSection(columnCount = "2");

		PageEditor.selectLayoutSectionImage(
			depotName = "Test Depot Name",
			imageFileName = "Document_1.jpeg");

		PageEditor.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/test-content-page-name");

		AssertElementPresent(
			key_imageName = "Document_1.jpeg",
			locator1 = "Fragment#FRAGMENT_LAYOUT_BACKGROUND_IMAGE");
	}

}