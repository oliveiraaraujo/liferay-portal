/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.liferay.multi.factor.authentication.checker.email.otp.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.multi.factor.authentication.checker.email.otp.model.EmailOTPEntry;
import com.liferay.multi.factor.authentication.checker.email.otp.model.EmailOTPEntryModel;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the EmailOTPEntry service. Represents a row in the &quot;MFAEmailOTPEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>EmailOTPEntryModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmailOTPEntryImpl}.
 * </p>
 *
 * @author Arthur Chan
 * @see EmailOTPEntryImpl
 * @generated
 */
public class EmailOTPEntryModelImpl
	extends BaseModelImpl<EmailOTPEntry> implements EmailOTPEntryModel {

	/**
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a email otp entry model instance should use the <code>EmailOTPEntry</code> interface instead.
	 */
	public static final String TABLE_NAME = "MFAEmailOTPEntry";

	public static final Object[][] TABLE_COLUMNS = {
		{"mvccVersion", Types.BIGINT}, {"entryId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"failedAttempts", Types.INTEGER},
		{"lastSuccessDate", Types.TIMESTAMP}, {"lastSuccessIP", Types.VARCHAR},
		{"lastFailDate", Types.TIMESTAMP}, {"lastFailIP", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("mvccVersion", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("entryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("failedAttempts", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("lastSuccessDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("lastSuccessIP", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastFailDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("lastFailIP", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table MFAEmailOTPEntry (mvccVersion LONG default 0 not null,entryId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,failedAttempts INTEGER,lastSuccessDate DATE null,lastSuccessIP VARCHAR(75) null,lastFailDate DATE null,lastFailIP VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP = "drop table MFAEmailOTPEntry";

	public static final String ORDER_BY_JPQL =
		" ORDER BY emailOTPEntry.entryId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY MFAEmailOTPEntry.entryId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final long USERID_COLUMN_BITMASK = 1L;

	public static final long ENTRYID_COLUMN_BITMASK = 2L;

	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
		_entityCacheEnabled = entityCacheEnabled;
	}

	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
		_finderCacheEnabled = finderCacheEnabled;
	}

	public EmailOTPEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _entryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEntryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _entryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmailOTPEntry.class;
	}

	@Override
	public String getModelClassName() {
		return EmailOTPEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<EmailOTPEntry, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<EmailOTPEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EmailOTPEntry, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((EmailOTPEntry)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<EmailOTPEntry, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<EmailOTPEntry, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(EmailOTPEntry)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<EmailOTPEntry, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<EmailOTPEntry, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, EmailOTPEntry>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			EmailOTPEntry.class.getClassLoader(), EmailOTPEntry.class,
			ModelWrapper.class);

		try {
			Constructor<EmailOTPEntry> constructor =
				(Constructor<EmailOTPEntry>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<EmailOTPEntry, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<EmailOTPEntry, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<EmailOTPEntry, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<EmailOTPEntry, Object>>();
		Map<String, BiConsumer<EmailOTPEntry, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<EmailOTPEntry, ?>>();

		attributeGetterFunctions.put(
			"mvccVersion", EmailOTPEntry::getMvccVersion);
		attributeSetterBiConsumers.put(
			"mvccVersion",
			(BiConsumer<EmailOTPEntry, Long>)EmailOTPEntry::setMvccVersion);
		attributeGetterFunctions.put("entryId", EmailOTPEntry::getEntryId);
		attributeSetterBiConsumers.put(
			"entryId",
			(BiConsumer<EmailOTPEntry, Long>)EmailOTPEntry::setEntryId);
		attributeGetterFunctions.put("companyId", EmailOTPEntry::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<EmailOTPEntry, Long>)EmailOTPEntry::setCompanyId);
		attributeGetterFunctions.put("userId", EmailOTPEntry::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<EmailOTPEntry, Long>)EmailOTPEntry::setUserId);
		attributeGetterFunctions.put("userName", EmailOTPEntry::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<EmailOTPEntry, String>)EmailOTPEntry::setUserName);
		attributeGetterFunctions.put(
			"createDate", EmailOTPEntry::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<EmailOTPEntry, Date>)EmailOTPEntry::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", EmailOTPEntry::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<EmailOTPEntry, Date>)EmailOTPEntry::setModifiedDate);
		attributeGetterFunctions.put(
			"failedAttempts", EmailOTPEntry::getFailedAttempts);
		attributeSetterBiConsumers.put(
			"failedAttempts",
			(BiConsumer<EmailOTPEntry, Integer>)
				EmailOTPEntry::setFailedAttempts);
		attributeGetterFunctions.put(
			"lastSuccessDate", EmailOTPEntry::getLastSuccessDate);
		attributeSetterBiConsumers.put(
			"lastSuccessDate",
			(BiConsumer<EmailOTPEntry, Date>)EmailOTPEntry::setLastSuccessDate);
		attributeGetterFunctions.put(
			"lastSuccessIP", EmailOTPEntry::getLastSuccessIP);
		attributeSetterBiConsumers.put(
			"lastSuccessIP",
			(BiConsumer<EmailOTPEntry, String>)EmailOTPEntry::setLastSuccessIP);
		attributeGetterFunctions.put(
			"lastFailDate", EmailOTPEntry::getLastFailDate);
		attributeSetterBiConsumers.put(
			"lastFailDate",
			(BiConsumer<EmailOTPEntry, Date>)EmailOTPEntry::setLastFailDate);
		attributeGetterFunctions.put(
			"lastFailIP", EmailOTPEntry::getLastFailIP);
		attributeSetterBiConsumers.put(
			"lastFailIP",
			(BiConsumer<EmailOTPEntry, String>)EmailOTPEntry::setLastFailIP);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getMvccVersion() {
		return _mvccVersion;
	}

	@Override
	public void setMvccVersion(long mvccVersion) {
		_mvccVersion = mvccVersion;
	}

	@Override
	public long getEntryId() {
		return _entryId;
	}

	@Override
	public void setEntryId(long entryId) {
		_entryId = entryId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public int getFailedAttempts() {
		return _failedAttempts;
	}

	@Override
	public void setFailedAttempts(int failedAttempts) {
		_failedAttempts = failedAttempts;
	}

	@Override
	public Date getLastSuccessDate() {
		return _lastSuccessDate;
	}

	@Override
	public void setLastSuccessDate(Date lastSuccessDate) {
		_lastSuccessDate = lastSuccessDate;
	}

	@Override
	public String getLastSuccessIP() {
		if (_lastSuccessIP == null) {
			return "";
		}
		else {
			return _lastSuccessIP;
		}
	}

	@Override
	public void setLastSuccessIP(String lastSuccessIP) {
		_lastSuccessIP = lastSuccessIP;
	}

	@Override
	public Date getLastFailDate() {
		return _lastFailDate;
	}

	@Override
	public void setLastFailDate(Date lastFailDate) {
		_lastFailDate = lastFailDate;
	}

	@Override
	public String getLastFailIP() {
		if (_lastFailIP == null) {
			return "";
		}
		else {
			return _lastFailIP;
		}
	}

	@Override
	public void setLastFailIP(String lastFailIP) {
		_lastFailIP = lastFailIP;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), EmailOTPEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmailOTPEntry toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, EmailOTPEntry>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmailOTPEntryImpl emailOTPEntryImpl = new EmailOTPEntryImpl();

		emailOTPEntryImpl.setMvccVersion(getMvccVersion());
		emailOTPEntryImpl.setEntryId(getEntryId());
		emailOTPEntryImpl.setCompanyId(getCompanyId());
		emailOTPEntryImpl.setUserId(getUserId());
		emailOTPEntryImpl.setUserName(getUserName());
		emailOTPEntryImpl.setCreateDate(getCreateDate());
		emailOTPEntryImpl.setModifiedDate(getModifiedDate());
		emailOTPEntryImpl.setFailedAttempts(getFailedAttempts());
		emailOTPEntryImpl.setLastSuccessDate(getLastSuccessDate());
		emailOTPEntryImpl.setLastSuccessIP(getLastSuccessIP());
		emailOTPEntryImpl.setLastFailDate(getLastFailDate());
		emailOTPEntryImpl.setLastFailIP(getLastFailIP());

		emailOTPEntryImpl.resetOriginalValues();

		return emailOTPEntryImpl;
	}

	@Override
	public int compareTo(EmailOTPEntry emailOTPEntry) {
		long primaryKey = emailOTPEntry.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmailOTPEntry)) {
			return false;
		}

		EmailOTPEntry emailOTPEntry = (EmailOTPEntry)obj;

		long primaryKey = emailOTPEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return _entityCacheEnabled;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return _finderCacheEnabled;
	}

	@Override
	public void resetOriginalValues() {
		EmailOTPEntryModelImpl emailOTPEntryModelImpl = this;

		emailOTPEntryModelImpl._originalUserId = emailOTPEntryModelImpl._userId;

		emailOTPEntryModelImpl._setOriginalUserId = false;

		emailOTPEntryModelImpl._setModifiedDate = false;

		emailOTPEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmailOTPEntry> toCacheModel() {
		EmailOTPEntryCacheModel emailOTPEntryCacheModel =
			new EmailOTPEntryCacheModel();

		emailOTPEntryCacheModel.mvccVersion = getMvccVersion();

		emailOTPEntryCacheModel.entryId = getEntryId();

		emailOTPEntryCacheModel.companyId = getCompanyId();

		emailOTPEntryCacheModel.userId = getUserId();

		emailOTPEntryCacheModel.userName = getUserName();

		String userName = emailOTPEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			emailOTPEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			emailOTPEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			emailOTPEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			emailOTPEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			emailOTPEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		emailOTPEntryCacheModel.failedAttempts = getFailedAttempts();

		Date lastSuccessDate = getLastSuccessDate();

		if (lastSuccessDate != null) {
			emailOTPEntryCacheModel.lastSuccessDate = lastSuccessDate.getTime();
		}
		else {
			emailOTPEntryCacheModel.lastSuccessDate = Long.MIN_VALUE;
		}

		emailOTPEntryCacheModel.lastSuccessIP = getLastSuccessIP();

		String lastSuccessIP = emailOTPEntryCacheModel.lastSuccessIP;

		if ((lastSuccessIP != null) && (lastSuccessIP.length() == 0)) {
			emailOTPEntryCacheModel.lastSuccessIP = null;
		}

		Date lastFailDate = getLastFailDate();

		if (lastFailDate != null) {
			emailOTPEntryCacheModel.lastFailDate = lastFailDate.getTime();
		}
		else {
			emailOTPEntryCacheModel.lastFailDate = Long.MIN_VALUE;
		}

		emailOTPEntryCacheModel.lastFailIP = getLastFailIP();

		String lastFailIP = emailOTPEntryCacheModel.lastFailIP;

		if ((lastFailIP != null) && (lastFailIP.length() == 0)) {
			emailOTPEntryCacheModel.lastFailIP = null;
		}

		return emailOTPEntryCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<EmailOTPEntry, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<EmailOTPEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EmailOTPEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((EmailOTPEntry)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<EmailOTPEntry, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<EmailOTPEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EmailOTPEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((EmailOTPEntry)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, EmailOTPEntry>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private static boolean _entityCacheEnabled;
	private static boolean _finderCacheEnabled;

	private long _mvccVersion;
	private long _entryId;
	private long _companyId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _failedAttempts;
	private Date _lastSuccessDate;
	private String _lastSuccessIP;
	private Date _lastFailDate;
	private String _lastFailIP;
	private long _columnBitmask;
	private EmailOTPEntry _escapedModel;

}